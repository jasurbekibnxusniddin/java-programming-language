plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
    id 'idea' // ✅ Add this line
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Reactive API Gateway with gRPC and Eureka'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    
     // ✅ gRPC dependencies
    implementation 'io.grpc:grpc-netty:1.65.0'   // ✅ gRPC transport
    implementation 'io.grpc:grpc-protobuf:1.65.0'
    implementation 'io.grpc:grpc-stub:1.65.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2' // ✅ fixes @Generated missing

    // ✅ Fix for "javax.annotation.Generated not found"
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    // --- Testing ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'javax.annotation:javax.annotation-api:1.3.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// ✅ Configure gRPC code generation
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.66.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {} // This generates message classes
            }
            task.plugins {
                grpc {} // This generates gRPC service stubs
            }
        }
    }
}


// ✅ Ensure generated code is compiled before Java sources
compileJava.dependsOn tasks.named("generateProto")

sourceSets {
    main {
        java {
            srcDirs += [
                "$buildDir/generated/source/proto/main/java",
                "$buildDir/generated/source/proto/main/grpc"
            ]
        }
    }
    test {
        java {
            srcDirs += [
                "$buildDir/generated/source/proto/main/java",
                "$buildDir/generated/source/proto/main/grpc"
            ]
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += [
                "$buildDir/generated/source/proto/main/java",
                "$buildDir/generated/source/proto/main/grpc"
            ]
        }
    }
}


// ✅ Configure testing
tasks.named('test') {
    useJUnitPlatform()
    // Skip default Spring Boot context test if needed
    exclude '**/ApiGatewayApplicationTests.class'
    // Optional: silence Unsafe warnings
    jvmArgs '--add-opens=java.base/sun.misc=ALL-UNNAMED'
}
